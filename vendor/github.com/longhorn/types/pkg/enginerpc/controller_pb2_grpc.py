# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from enginerpc import controller_pb2 as enginerpc_dot_controller__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ControllerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.VolumeGet = channel.unary_unary(
                '/enginerpc.ControllerService/VolumeGet',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.Volume.FromString,
                )
        self.VolumeStart = channel.unary_unary(
                '/enginerpc.ControllerService/VolumeStart',
                request_serializer=enginerpc_dot_controller__pb2.VolumeStartRequest.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.Volume.FromString,
                )
        self.VolumeShutdown = channel.unary_unary(
                '/enginerpc.ControllerService/VolumeShutdown',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.Volume.FromString,
                )
        self.VolumeSnapshot = channel.unary_unary(
                '/enginerpc.ControllerService/VolumeSnapshot',
                request_serializer=enginerpc_dot_controller__pb2.VolumeSnapshotRequest.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.VolumeSnapshotReply.FromString,
                )
        self.VolumeRevert = channel.unary_unary(
                '/enginerpc.ControllerService/VolumeRevert',
                request_serializer=enginerpc_dot_controller__pb2.VolumeRevertRequest.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.Volume.FromString,
                )
        self.VolumeExpand = channel.unary_unary(
                '/enginerpc.ControllerService/VolumeExpand',
                request_serializer=enginerpc_dot_controller__pb2.VolumeExpandRequest.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.Volume.FromString,
                )
        self.VolumeFrontendStart = channel.unary_unary(
                '/enginerpc.ControllerService/VolumeFrontendStart',
                request_serializer=enginerpc_dot_controller__pb2.VolumeFrontendStartRequest.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.Volume.FromString,
                )
        self.VolumeFrontendShutdown = channel.unary_unary(
                '/enginerpc.ControllerService/VolumeFrontendShutdown',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.Volume.FromString,
                )
        self.VolumeUnmapMarkSnapChainRemovedSet = channel.unary_unary(
                '/enginerpc.ControllerService/VolumeUnmapMarkSnapChainRemovedSet',
                request_serializer=enginerpc_dot_controller__pb2.VolumeUnmapMarkSnapChainRemovedSetRequest.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.Volume.FromString,
                )
        self.VolumeSnapshotMaxCountSet = channel.unary_unary(
                '/enginerpc.ControllerService/VolumeSnapshotMaxCountSet',
                request_serializer=enginerpc_dot_controller__pb2.VolumeSnapshotMaxCountSetRequest.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.Volume.FromString,
                )
        self.VolumeSnapshotMaxSizeSet = channel.unary_unary(
                '/enginerpc.ControllerService/VolumeSnapshotMaxSizeSet',
                request_serializer=enginerpc_dot_controller__pb2.VolumeSnapshotMaxSizeSetRequest.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.Volume.FromString,
                )
        self.ReplicaList = channel.unary_unary(
                '/enginerpc.ControllerService/ReplicaList',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.ReplicaListReply.FromString,
                )
        self.ReplicaGet = channel.unary_unary(
                '/enginerpc.ControllerService/ReplicaGet',
                request_serializer=enginerpc_dot_controller__pb2.ReplicaAddress.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.ControllerReplica.FromString,
                )
        self.ControllerReplicaCreate = channel.unary_unary(
                '/enginerpc.ControllerService/ControllerReplicaCreate',
                request_serializer=enginerpc_dot_controller__pb2.ControllerReplicaCreateRequest.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.ControllerReplica.FromString,
                )
        self.ReplicaDelete = channel.unary_unary(
                '/enginerpc.ControllerService/ReplicaDelete',
                request_serializer=enginerpc_dot_controller__pb2.ReplicaAddress.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ReplicaUpdate = channel.unary_unary(
                '/enginerpc.ControllerService/ReplicaUpdate',
                request_serializer=enginerpc_dot_controller__pb2.ControllerReplica.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.ControllerReplica.FromString,
                )
        self.ReplicaPrepareRebuild = channel.unary_unary(
                '/enginerpc.ControllerService/ReplicaPrepareRebuild',
                request_serializer=enginerpc_dot_controller__pb2.ReplicaAddress.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.ReplicaPrepareRebuildReply.FromString,
                )
        self.ReplicaVerifyRebuild = channel.unary_unary(
                '/enginerpc.ControllerService/ReplicaVerifyRebuild',
                request_serializer=enginerpc_dot_controller__pb2.ReplicaAddress.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.ControllerReplica.FromString,
                )
        self.JournalList = channel.unary_unary(
                '/enginerpc.ControllerService/JournalList',
                request_serializer=enginerpc_dot_controller__pb2.JournalListRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.VersionDetailGet = channel.unary_unary(
                '/enginerpc.ControllerService/VersionDetailGet',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.VersionDetailGetReply.FromString,
                )
        self.MetricsGet = channel.unary_unary(
                '/enginerpc.ControllerService/MetricsGet',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=enginerpc_dot_controller__pb2.MetricsGetReply.FromString,
                )


class ControllerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def VolumeGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VolumeStart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VolumeShutdown(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VolumeSnapshot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VolumeRevert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VolumeExpand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VolumeFrontendStart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VolumeFrontendShutdown(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VolumeUnmapMarkSnapChainRemovedSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VolumeSnapshotMaxCountSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VolumeSnapshotMaxSizeSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplicaList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplicaGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ControllerReplicaCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplicaDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplicaUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplicaPrepareRebuild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplicaVerifyRebuild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JournalList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VersionDetailGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MetricsGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ControllerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'VolumeGet': grpc.unary_unary_rpc_method_handler(
                    servicer.VolumeGet,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.Volume.SerializeToString,
            ),
            'VolumeStart': grpc.unary_unary_rpc_method_handler(
                    servicer.VolumeStart,
                    request_deserializer=enginerpc_dot_controller__pb2.VolumeStartRequest.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.Volume.SerializeToString,
            ),
            'VolumeShutdown': grpc.unary_unary_rpc_method_handler(
                    servicer.VolumeShutdown,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.Volume.SerializeToString,
            ),
            'VolumeSnapshot': grpc.unary_unary_rpc_method_handler(
                    servicer.VolumeSnapshot,
                    request_deserializer=enginerpc_dot_controller__pb2.VolumeSnapshotRequest.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.VolumeSnapshotReply.SerializeToString,
            ),
            'VolumeRevert': grpc.unary_unary_rpc_method_handler(
                    servicer.VolumeRevert,
                    request_deserializer=enginerpc_dot_controller__pb2.VolumeRevertRequest.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.Volume.SerializeToString,
            ),
            'VolumeExpand': grpc.unary_unary_rpc_method_handler(
                    servicer.VolumeExpand,
                    request_deserializer=enginerpc_dot_controller__pb2.VolumeExpandRequest.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.Volume.SerializeToString,
            ),
            'VolumeFrontendStart': grpc.unary_unary_rpc_method_handler(
                    servicer.VolumeFrontendStart,
                    request_deserializer=enginerpc_dot_controller__pb2.VolumeFrontendStartRequest.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.Volume.SerializeToString,
            ),
            'VolumeFrontendShutdown': grpc.unary_unary_rpc_method_handler(
                    servicer.VolumeFrontendShutdown,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.Volume.SerializeToString,
            ),
            'VolumeUnmapMarkSnapChainRemovedSet': grpc.unary_unary_rpc_method_handler(
                    servicer.VolumeUnmapMarkSnapChainRemovedSet,
                    request_deserializer=enginerpc_dot_controller__pb2.VolumeUnmapMarkSnapChainRemovedSetRequest.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.Volume.SerializeToString,
            ),
            'VolumeSnapshotMaxCountSet': grpc.unary_unary_rpc_method_handler(
                    servicer.VolumeSnapshotMaxCountSet,
                    request_deserializer=enginerpc_dot_controller__pb2.VolumeSnapshotMaxCountSetRequest.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.Volume.SerializeToString,
            ),
            'VolumeSnapshotMaxSizeSet': grpc.unary_unary_rpc_method_handler(
                    servicer.VolumeSnapshotMaxSizeSet,
                    request_deserializer=enginerpc_dot_controller__pb2.VolumeSnapshotMaxSizeSetRequest.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.Volume.SerializeToString,
            ),
            'ReplicaList': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplicaList,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.ReplicaListReply.SerializeToString,
            ),
            'ReplicaGet': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplicaGet,
                    request_deserializer=enginerpc_dot_controller__pb2.ReplicaAddress.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.ControllerReplica.SerializeToString,
            ),
            'ControllerReplicaCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.ControllerReplicaCreate,
                    request_deserializer=enginerpc_dot_controller__pb2.ControllerReplicaCreateRequest.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.ControllerReplica.SerializeToString,
            ),
            'ReplicaDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplicaDelete,
                    request_deserializer=enginerpc_dot_controller__pb2.ReplicaAddress.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ReplicaUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplicaUpdate,
                    request_deserializer=enginerpc_dot_controller__pb2.ControllerReplica.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.ControllerReplica.SerializeToString,
            ),
            'ReplicaPrepareRebuild': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplicaPrepareRebuild,
                    request_deserializer=enginerpc_dot_controller__pb2.ReplicaAddress.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.ReplicaPrepareRebuildReply.SerializeToString,
            ),
            'ReplicaVerifyRebuild': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplicaVerifyRebuild,
                    request_deserializer=enginerpc_dot_controller__pb2.ReplicaAddress.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.ControllerReplica.SerializeToString,
            ),
            'JournalList': grpc.unary_unary_rpc_method_handler(
                    servicer.JournalList,
                    request_deserializer=enginerpc_dot_controller__pb2.JournalListRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'VersionDetailGet': grpc.unary_unary_rpc_method_handler(
                    servicer.VersionDetailGet,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.VersionDetailGetReply.SerializeToString,
            ),
            'MetricsGet': grpc.unary_unary_rpc_method_handler(
                    servicer.MetricsGet,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=enginerpc_dot_controller__pb2.MetricsGetReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'enginerpc.ControllerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ControllerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def VolumeGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/VolumeGet',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            enginerpc_dot_controller__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VolumeStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/VolumeStart',
            enginerpc_dot_controller__pb2.VolumeStartRequest.SerializeToString,
            enginerpc_dot_controller__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VolumeShutdown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/VolumeShutdown',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            enginerpc_dot_controller__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VolumeSnapshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/VolumeSnapshot',
            enginerpc_dot_controller__pb2.VolumeSnapshotRequest.SerializeToString,
            enginerpc_dot_controller__pb2.VolumeSnapshotReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VolumeRevert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/VolumeRevert',
            enginerpc_dot_controller__pb2.VolumeRevertRequest.SerializeToString,
            enginerpc_dot_controller__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VolumeExpand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/VolumeExpand',
            enginerpc_dot_controller__pb2.VolumeExpandRequest.SerializeToString,
            enginerpc_dot_controller__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VolumeFrontendStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/VolumeFrontendStart',
            enginerpc_dot_controller__pb2.VolumeFrontendStartRequest.SerializeToString,
            enginerpc_dot_controller__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VolumeFrontendShutdown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/VolumeFrontendShutdown',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            enginerpc_dot_controller__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VolumeUnmapMarkSnapChainRemovedSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/VolumeUnmapMarkSnapChainRemovedSet',
            enginerpc_dot_controller__pb2.VolumeUnmapMarkSnapChainRemovedSetRequest.SerializeToString,
            enginerpc_dot_controller__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VolumeSnapshotMaxCountSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/VolumeSnapshotMaxCountSet',
            enginerpc_dot_controller__pb2.VolumeSnapshotMaxCountSetRequest.SerializeToString,
            enginerpc_dot_controller__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VolumeSnapshotMaxSizeSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/VolumeSnapshotMaxSizeSet',
            enginerpc_dot_controller__pb2.VolumeSnapshotMaxSizeSetRequest.SerializeToString,
            enginerpc_dot_controller__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReplicaList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/ReplicaList',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            enginerpc_dot_controller__pb2.ReplicaListReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReplicaGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/ReplicaGet',
            enginerpc_dot_controller__pb2.ReplicaAddress.SerializeToString,
            enginerpc_dot_controller__pb2.ControllerReplica.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ControllerReplicaCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/ControllerReplicaCreate',
            enginerpc_dot_controller__pb2.ControllerReplicaCreateRequest.SerializeToString,
            enginerpc_dot_controller__pb2.ControllerReplica.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReplicaDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/ReplicaDelete',
            enginerpc_dot_controller__pb2.ReplicaAddress.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReplicaUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/ReplicaUpdate',
            enginerpc_dot_controller__pb2.ControllerReplica.SerializeToString,
            enginerpc_dot_controller__pb2.ControllerReplica.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReplicaPrepareRebuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/ReplicaPrepareRebuild',
            enginerpc_dot_controller__pb2.ReplicaAddress.SerializeToString,
            enginerpc_dot_controller__pb2.ReplicaPrepareRebuildReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReplicaVerifyRebuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/ReplicaVerifyRebuild',
            enginerpc_dot_controller__pb2.ReplicaAddress.SerializeToString,
            enginerpc_dot_controller__pb2.ControllerReplica.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def JournalList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/JournalList',
            enginerpc_dot_controller__pb2.JournalListRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VersionDetailGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/VersionDetailGet',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            enginerpc_dot_controller__pb2.VersionDetailGetReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MetricsGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/enginerpc.ControllerService/MetricsGet',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            enginerpc_dot_controller__pb2.MetricsGetReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
